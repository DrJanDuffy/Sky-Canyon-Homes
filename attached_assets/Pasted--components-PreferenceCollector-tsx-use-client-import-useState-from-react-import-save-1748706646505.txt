// components/PreferenceCollector.tsx
'use client'
import { useState } from 'react'
import { saveUserPreferences } from '@/lib/preferences'

export default function PreferenceCollector() {
  const [preferences, setPreferences] = useState({
    propertyType: '',
    features: [] as string[],
    lifestyle: [] as string[],
    timeline: '',
    communication: ''
  })
  
  const features = [
    { id: 'pool', label: '🏊 Pool', value: 'pool' },
    { id: 'golf', label: '⛳ Golf Course View', value: 'golf-view' },
    { id: 'modern', label: '🏢 Modern Kitchen', value: 'modern-kitchen' },
    { id: 'office', label: '💼 Home Office', value: 'home-office' },
    { id: 'rv', label: '🚐 RV Parking', value: 'rv-parking' },
    { id: 'solar', label: '☀️ Solar Panels', value: 'solar' }
  ]
  
  const lifestyles = [
    { id: 'family', label: '👨‍👩‍👧‍👦 Family-Focused', value: 'family' },
    { id: 'entertaining', label: '🎉 Love Entertaining', value: 'entertaining' },
    { id: 'quiet', label: '🤫 Quiet & Private', value: 'quiet' },
    { id: 'active', label: '🏃 Active Lifestyle', value: 'active' },
    { id: 'pet', label: '🐕 Pet Owner', value: 'pets' },
    { id: 'work', label: '🏠 Work From Home', value: 'remote-work' }
  ]
  
  return (
    <div className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8">
      <h3 className="text-2xl font-bold mb-2">
        🎯 Let's Find Your Perfect Sky Canyon Home
      </h3>
      <p className="text-gray-600 mb-6">
        Tell us what matters most to you (takes 30 seconds)
      </p>
      
      {/* Property Type */}
      <div className="mb-6">
        <label className="block text-sm font-medium mb-3">
          Preferred Property Style
        </label>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {['Single Story', 'Two Story', 'Modern', 'Traditional'].map((type) => (
            <button
              key={type}
              onClick={() => setPreferences({...preferences, propertyType: type})}
              className={`px-4 py-2 rounded-lg border-2 transition-all ${
                preferences.propertyType === type
                  ? 'border-blue-500 bg-blue-50 text-blue-700'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              {type}
            </button>
          ))}
        </div>
      </div>
      
      {/* Must-Have Features */}
      <div className="mb-6">
        <label className="block text-sm font-medium mb-3">
          Must-Have Features (select all that apply)
        </label>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
          {features.map((feature) => (
            <button
              key={feature.id}
              onClick={() => {
                const updated = preferences.features.includes(feature.value)
                  ? preferences.features.filter(f => f !== feature.value)
                  : [...preferences.features, feature.value]
                setPreferences({...preferences, features: updated})
              }}
              className={`px-4 py-2 rounded-lg border-2 transition-all text-left ${
                preferences.features.includes(feature.value)
                  ? 'border-blue-500 bg-blue-50'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              {feature.label}
            </button>
          ))}
        </div>
      </div>
      
      {/* Lifestyle */}
      <div className="mb-6">
        <label className="block text-sm font-medium mb-3">
          Your Lifestyle (select all that apply)
        </label>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
          {lifestyles.map((lifestyle) => (
            <button
              key={lifestyle.id}
              onClick={() => {
                const updated = preferences.lifestyle.includes(lifestyle.value)
                  ? preferences.lifestyle.filter(l => l !== lifestyle.value)
                  : [...preferences.lifestyle, lifestyle.value]
                setPreferences({...preferences, lifestyle: updated})
              }}
              className={`px-4 py-2 rounded-lg border-2 transition-all text-left ${
                preferences.lifestyle.includes(lifestyle.value)
                  ? 'border-blue-500 bg-blue-50'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              {lifestyle.label}
            </button>
          ))}
        </div>
      </div>
      
      {/* Communication Preference */}
      <div className="mb-6">
        <label className="block text-sm font-medium mb-3">
          How should we update you?
        </label>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {['Text', 'Email', 'Phone Call', 'All of the above'].map((method) => (
            <button
              key={method}
              onClick={() => setPreferences({...preferences, communication: method})}
              className={`px-4 py-2 rounded-lg border-2 transition-all ${
                preferences.communication === method
                  ? 'border-blue-500 bg-blue-50 text-blue-700'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              {method}
            </button>
          ))}
        </div>
      </div>
      
      <button
        onClick={() => saveUserPreferences(preferences)}
        className="w-full bg-blue-600 text-white py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors"
      >
        Get My Personalized Matches 🏠
      </button>
    </div>
  )
}